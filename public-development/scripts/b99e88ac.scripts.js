"use strict";angular.module("gradebookApp",["ui.bootstrap.accordion","ui.bootstrap.dropdownToggle","ui.bootstrap.modal","ui.bootstrap.tabs","ui.bootstrap.tpls","ngGrid","ngRoute"]).constant("RolePaths",{teacher:"/teacher/classrooms",student:"/student/classrooms",parent:"/parent/classrooms"}).constant("MenuItems",{teacher:[{name:"Classrooms",href:"#/teacher/classrooms"}],student:[{name:"Classrooms",href:"#/student/classrooms"},{name:"Parents",href:"#/student/parents"}],parent:[{name:"Classrooms",href:"#/parent/classrooms"}]}).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"views/home.html",controller:"HomeCtrl"}).when("/signin",{templateUrl:"views/signin.html",controller:"SigninCtrl",requireNotLoggedIn:!0}).when("/signup",{templateUrl:"views/signup.html",controller:"SignupCtrl",requireNotLoggedIn:!0}).when("/teacher/classrooms",{templateUrl:"views/teacher/classrooms.html",controller:"TeacherClassroomsCtrl",requiredRole:"teacher",resolve:{classrooms:function($q,dpd){var deferred=$q.defer();return dpd.classrooms.get(function(result,error){deferred.resolve(result,error)}),deferred.promise}}}).when("/teacher/classroom/:id",{templateUrl:"views/teacher/classroom.html",controller:"TeacherClassroomCtrl",requiredRole:"teacher",reloadOnSearch:!1,resolve:{classroom:function($q,$route,dpd){var deferred=$q.defer();return dpd.classrooms.get($route.current.params.id,function(result,error){deferred.resolve(result,error)}),deferred.promise}}}).when("/student/classrooms",{templateUrl:"views/student/classrooms.html",controller:"StudentClassroomsCtrl",requiredRole:"student",resolve:{classrooms:function($q,dpd){var deferred=$q.defer();return dpd.classrooms.get(function(result,error){deferred.resolve(result,error)}),deferred.promise}}}).when("/student/classroom/:id",{templateUrl:"views/student/classroom.html",controller:"StudentClassroomCtrl",requiredRole:"student",reloadOnSearch:!1,resolve:{classroom:function($q,$route,dpd){var deferred=$q.defer();return dpd.classrooms.get($route.current.params.id,function(result,error){deferred.resolve(result,error)}),deferred.promise}}}).when("/student/parents",{templateUrl:"views/student/parents.html",controller:"StudentParentsCtrl",requiredRole:"student"}).when("/parent/classrooms",{templateUrl:"views/parent/classrooms.html",controller:"ParentClassroomsCtrl",requiredRole:"parent",reloadOnSearch:!1,resolve:{students:function($q,dpd){var deferred=$q.defer();return dpd.users.get({type:"student"},function(result,error){deferred.resolve(result,error)}),deferred.promise}}}).when("/parent/classroom/:studentId/:id",{templateUrl:"views/parent/classroom.html",controller:"ParentClassroomCtrl",requiredRole:"parent",resolve:{student:function($q,$route,dpd){var deferred=$q.defer();return dpd.users.get($route.current.params.studentId,function(student,error){error&&deferred.resolve(student,error),dpd.classrooms.get({id:$route.current.params.id,studentEmail:student.email},function(cr,error){student.classroom=cr,delete student.classrooms,deferred.resolve(student,error)})}),deferred.promise}}}).otherwise({redirectTo:"/"})}]).run(["$rootScope","$location","AuthService","RolePaths",function($rootScope,$location,AuthService,RolePaths){$rootScope.$on("$routeChangeStart",function(event,next){var user=AuthService.getUser();!user&&next.requiredRole&&(event.preventDefault(),$location.path("/signin").replace()),user&&(next.requireNotLoggedIn||void 0!==next.requiredRole&&next.requiredRole!==user.type)&&$location.path(RolePaths[user.type]).replace()})}]),angular.module("gradebookApp").controller("MainCtrl",["$scope","$location","dpd","AuthService",function($scope,$location,dpd,AuthService){$scope.logout=function(){dpd.users.logout(),AuthService.setUser(null),$location.path("/")}}]),angular.module("gradebookApp").controller("HomeCtrl",["$scope","AuthService","RolePaths",function($scope,AuthService,RolePaths){$scope.user=AuthService.getUser(),$scope.dashboardUrl=RolePaths[$scope.user.type]}]),angular.module("gradebookApp").controller("SigninCtrl",["$scope","$location","AuthService","RolePaths","dpd",function($scope,$location,AuthService,RolePaths,dpd){$scope.user={},$scope.signIn=function(){dpd.users.login($scope.user,function(user,error){return error?($scope.error=error.message,void $scope.$apply()):void dpd.users.get(user.uid,function(user,error){return error?($scope.error=error.message,void $scope.$apply()):(AuthService.setUser(user),void $scope.$apply(function(){$location.path(RolePaths[user.type])}))})})}}]),angular.module("gradebookApp").controller("SignupCtrl",["$scope","$location","AuthService","RolePaths","dpd",function($scope,$location,AuthService,RolePaths,dpd){$scope.user={},$scope.signUp=function(){$scope.user.username=$scope.user.email,dpd.users.post($scope.user,function(user,error){return error?($scope.error=error.message,void $scope.$apply()):(AuthService.setUser(user),$scope.$apply(function(){$location.path(RolePaths[user.type])}),void dpd.users.login($scope.user))})}}]),angular.module("gradebookApp").controller("AlertModalCtrl",["$scope","$modalInstance","message",function($scope,$modalInstance,message){$scope.message=message,$scope.ok=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gradebookApp").controller("TeacherClassroomCtrl",["$scope","$modal","$timeout","$location","AuthService","RolePaths","MenuItems","classroom","dpd",function($scope,$modal,$timeout,$location,AuthService,RolePaths,MenuItems,classroom,dpd){$scope.saveText="Save",$scope.deleteText="Delete Class",$scope.saveGradebookText="Save",$scope.user=AuthService.getUser(),$scope.menuLinks=MenuItems[$scope.user.type],$scope.cr=classroom,$scope.activeTabs={administration:{main:!1,info:!1,students:!1},gradebook:{main:!1},attendance:{main:!1}};var activeTab=$location.search().tab,activeSubtab=$location.search().subtab;activeTab&&($scope.activeTabs[activeTab].main=!0),activeSubtab&&($scope.activeTabs[activeTab||"administration"][activeSubtab]=!0),$scope.selectTab=function(tab){$location.search("tab",tab).replace()},$scope.selectSubtab=function(subtab){$location.search("subtab",subtab).replace()},$scope.saveClass=function(){"Save"===$scope.saveText&&($scope.saveText="Saving...",dpd.classrooms.put($scope.cr,function(){$timeout(function(){$scope.saveText="Saved!"}),$timeout(function(){$scope.saveText="Save"},2e3)}))},$scope.deleteClass=function(){"Delete Class"===$scope.deleteText&&($scope.deleteText="Deleting...",dpd.classrooms.del($scope.cr.id,function(){$timeout(function(){$location.path(RolePaths[$scope.user.type])})}))},$scope.openAddStudentModal=function(){$modal.open({templateUrl:"views/teacher/modal-addStudent.html",controller:"AddStudentModalCtrl",resolve:{classroom:function(){return $scope.cr}}})},$scope.removeStudent=function(delStudent){$scope.cr.students.forEach(function(student,index,students){student.email===delStudent.email&&students.splice(index,1)}),dpd.classrooms.put($scope.cr.id,{students:$scope.cr.students},function(){})},$scope.saveGradebook=function(){"Save"===$scope.saveGradebookText&&($scope.saveGradebookText="Saving...",dpd.classrooms.put($scope.cr,function(){$timeout(function(){$scope.saveGradebookText="Saved!"}),$timeout(function(){$scope.saveGradebookText="Save"},2e3)}))};var cellEditableTemplate='<input ng-class="\'colt\' + col.index" ng-input="COL_FIELD" ng-model="COL_FIELD" ng-change="updateEntity(col, row, COL_FIELD)" />';$scope.gridOptions={data:"cr.students",enableCellSelection:!0,enableRowSelection:!1,enableCellEditOnFocus:!0,columnDefs:[{field:"name",displayName:"Student",enableCellEdit:!1},{field:"grades.grade",displayName:"Grade",enableCellEdit:!1},{field:"grades.test1",displayName:"Test 1",editableCellTemplate:cellEditableTemplate},{field:"grades.homework1",displayName:"Homework 1",editableCellTemplate:cellEditableTemplate},{field:"grades.test2",displayName:"Test 2",editableCellTemplate:cellEditableTemplate},{field:"grades.homework2",displayName:"Homework 2",editableCellTemplate:cellEditableTemplate}]},$scope.updateEntity=function(col,row){var gds=$scope.cr.students[row.rowIndex].grades,avg=(parseInt(gds.test1)+parseInt(gds.homework1)+parseInt(gds.test2)+parseInt(gds.homework2))/4;gds.grade=avg>=90?"A":avg>=80?"B":avg>=70?"C":avg>=60?"D":"F"}}]),angular.module("gradebookApp").controller("TeacherClassroomsCtrl",["$scope","$modal","AuthService","MenuItems","classrooms",function($scope,$modal,AuthService,MenuItems,classrooms){$scope.user=AuthService.getUser(),$scope.menuLinks=MenuItems[$scope.user.type],$scope.classrooms=classrooms,$scope.openCreateClassroomModal=function(){$modal.open({templateUrl:"views/teacher/modal-createClassroom.html",controller:"CreateClassroomModalCtrl"})}}]),angular.module("gradebookApp").controller("AddStudentModalCtrl",["$scope","$filter","$modalInstance","dpd","classroom",function($scope,$filter,$modalInstance,dpd,classroom){$scope.student={},$scope.addText="Add",$scope.addStudent=function(){if("Add"===$scope.addText){$scope.addText="Adding...";var student=$scope.student,students=[];angular.extend(students,classroom.students),$filter("removeDollarFields")(students),students.push(student),dpd.classrooms.put(classroom.id,{students:students},function(result,error){return error?($scope.error=error,$scope.addText="Add",void $scope.$apply()):(classroom.students.push(student),void $modalInstance.close())})}},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gradebookApp").controller("CreateClassroomModalCtrl",["$scope","$modalInstance","$location","dpd",function($scope,$modalInstance,$location,dpd){$scope.cr={gradeLevel:"pre-k",students:[]},$scope.addText="Add",$scope.createClass=function(){"Add"===$scope.addText&&($scope.addText="Adding...",dpd.classrooms.post($scope.cr,function(result,error){return error?($scope.error=error,$scope.addText="Add",void $scope.$apply()):($modalInstance.close(),void $location.path("/teacher/classroom/"+result.id))}))},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gradebookApp").controller("StudentClassroomCtrl",["$scope","AuthService","MenuItems","classroom",function($scope,AuthService,MenuItems,classroom){$scope.user=AuthService.getUser(),$scope.menuLinks=MenuItems[$scope.user.type],$scope.classroomName=classroom.name,classroom.students.forEach(function(student){student.email===$scope.user.email&&($scope.grades=student.grades)})}]),angular.module("gradebookApp").controller("StudentClassroomsCtrl",["$scope","AuthService","MenuItems","classrooms",function($scope,AuthService,MenuItems,classrooms){$scope.user=AuthService.getUser(),$scope.menuLinks=MenuItems[$scope.user.type],$scope.classrooms=classrooms}]),angular.module("gradebookApp").controller("StudentParentsCtrl",["$scope","$modal","AuthService","MenuItems",function($scope,$modal,AuthService,MenuItems){$scope.user=AuthService.getUser(),$scope.user.parents=$scope.user.parents||{},$scope.menuLinks=MenuItems[$scope.user.type],$scope.parents=$scope.user.parents,$scope.openAddParentModal=function(){$modal.open({templateUrl:"views/student/modal-addParent.html",controller:"AddParentModalCtrl",resolve:{user:function(){return $scope.user}}})},$scope.removeParent=function(parent){$scope.user.parents.forEach(function(prnt,index,parents){prnt.email===parent.email&&parents.splice(index,1)}),dpd.users.put($scope.user.id,{parents:$scope.user.parents},function(){})}}]),angular.module("gradebookApp").controller("AddParentModalCtrl",["$scope","$filter","$modalInstance","dpd","user",function($scope,$filter,$modalInstance,dpd,user){$scope.parent={},$scope.addText="Add",$scope.addParent=function(){if("Add"===$scope.addText){$scope.addText="Adding...";var parent=$scope.parent,parents=[];angular.extend(parents,user.parents),$filter("removeDollarFields")(parents),parents.push(parent),dpd.users.put(user.id,{parents:parents},function(result,error){return error?($scope.error=error,$scope.addText="Add",void $scope.$apply()):(user.parents.push(parent),void $modalInstance.close())})}},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gradebookApp").controller("ParentClassroomCtrl",["$scope","AuthService","MenuItems","student",function($scope,AuthService,MenuItems,student){$scope.user=AuthService.getUser(),$scope.menuLinks=MenuItems[$scope.user.type],$scope.student=student,student.classroom.students.forEach(function(std){std.email===student.email&&($scope.grades=std.grades)})}]),angular.module("gradebookApp").controller("ParentClassroomsCtrl",["$scope","AuthService","MenuItems","students",function($scope,AuthService,MenuItems,students){$scope.user=AuthService.getUser(),$scope.menuLinks=MenuItems[$scope.user.type],$scope.students=students}]),angular.module("gradebookApp").directive("isActive",["$location",function($location){return{restrict:"A",link:function(scope,element,attrs){attrs.isActive==="#"+$location.path()&&element.addClass("active")}}}]),angular.module("gradebookApp").directive("feature",["$modal",function($modal){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(){$modal.open({templateUrl:"views/modals/alert.html",controller:"AlertModalCtrl",resolve:{message:function(){return attrs.feature}}})})}}}]),angular.module("gradebookApp").service("AuthService",function(){this.user=window.currentUser,this.setUser=function(user){this.user=user},this.getUser=function(){return this.user||""}}),angular.module("gradebookApp").service("dpd",function(){return window.dpd}),angular.module("gradebookApp").filter("beautifyGradeName",function(){return function(input){return{grade:"Final Grade",test1:"Test 1",homework1:"Homework 1",test2:"Test 2",homework2:"Homework 2"}[input]}}),angular.module("gradebookApp").filter("removeDollarFields",function(){return function(array){array.forEach(function(obj){Object.keys(obj).forEach(function(key){0===key.indexOf("$")&&delete obj[key]})})}});